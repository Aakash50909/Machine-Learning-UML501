{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Question 1","metadata":{}},{"cell_type":"code","source":"import requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nurl=\"https://books.toscrape.com/\"\nresponse=requests.get(url)\nsoup = BeautifulSoup(response.text, \"html.parser\")\nbook = [t.text for t in soup.find_all(\"span\", class_=\"title\")]\nbooks_on_page = soup.find_all('article', class_='product_pod')\nbooks_data=[]\nfor book in books_on_page:\n    title = book.h3.a['title']\n    price = book.find('p', class_='price_color').text\n    availability = book.find('p', class_='instock availability').text.strip() \n    star_rating = book.find('p', class_='star-rating')['class'][1]\n    books_data.append({\n        'Title': title,\n        'Price': price,\n        'Availability': availability,\n        'Star Rating': star_rating\n    })\ndf = pd.DataFrame(books_data)\ndf.to_csv('books_first_page.csv', index=False)\nprint(df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-17T16:38:25.058194Z","iopub.execute_input":"2025-09-17T16:38:25.058534Z","iopub.status.idle":"2025-09-17T16:38:25.139327Z","shell.execute_reply.started":"2025-09-17T16:38:25.058511Z","shell.execute_reply":"2025-09-17T16:38:25.138465Z"}},"outputs":[{"name":"stdout","text":"                                                Title    Price Availability  \\\n0                                A Light in the Attic  Â£51.77     In stock   \n1                                  Tipping the Velvet  Â£53.74     In stock   \n2                                          Soumission  Â£50.10     In stock   \n3                                       Sharp Objects  Â£47.82     In stock   \n4               Sapiens: A Brief History of Humankind  Â£54.23     In stock   \n5                                     The Requiem Red  Â£22.65     In stock   \n6   The Dirty Little Secrets of Getting Your Dream...  Â£33.34     In stock   \n7   The Coming Woman: A Novel Based on the Life of...  Â£17.93     In stock   \n8   The Boys in the Boat: Nine Americans and Their...  Â£22.60     In stock   \n9                                     The Black Maria  Â£52.15     In stock   \n10     Starving Hearts (Triangular Trade Trilogy, #1)  Â£13.99     In stock   \n11                              Shakespeare's Sonnets  Â£20.66     In stock   \n12                                        Set Me Free  Â£17.46     In stock   \n13  Scott Pilgrim's Precious Little Life (Scott Pi...  Â£52.29     In stock   \n14                          Rip it Up and Start Again  Â£35.02     In stock   \n15  Our Band Could Be Your Life: Scenes from the A...  Â£57.25     In stock   \n16                                               Olio  Â£23.88     In stock   \n17  Mesaerion: The Best Science Fiction Stories 18...  Â£37.59     In stock   \n18                       Libertarianism for Beginners  Â£51.33     In stock   \n19                            It's Only the Himalayas  Â£45.17     In stock   \n\n   Star Rating  \n0        Three  \n1          One  \n2          One  \n3         Four  \n4         Five  \n5          One  \n6         Four  \n7        Three  \n8         Four  \n9          One  \n10         Two  \n11        Four  \n12        Five  \n13        Five  \n14        Five  \n15       Three  \n16         One  \n17         One  \n18         Two  \n19         Two  \n","output_type":"stream"}],"execution_count":5},{"cell_type":"markdown","source":"# Question 2","metadata":{}},{"cell_type":"code","source":"!pip install nest_asyncio playwright pandas\n!playwright install chromium\n\nimport nest_asyncio\nimport asyncio\nimport re\nnest_asyncio.apply()\n\nfrom playwright.async_api import async_playwright\nimport pandas as pd\n\nasync def scrape_imdb():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=True)\n        page = await browser.new_page()\n        \n        await page.set_extra_http_headers({\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n        })\n        \n        await page.goto(\"https://www.imdb.com/chart/top/\", wait_until=\"networkidle\")\n        await page.wait_for_timeout(3000)\n        await page.wait_for_selector(\"ul.ipc-metadata-list li\", timeout=10000)\n        \n        rows = await page.query_selector_all(\"ul.ipc-metadata-list li\")\n        data = []\n        \n        for i, row in enumerate(rows[:250], 1):\n            title_elem = await row.query_selector(\".ipc-title a\")\n            year_elem = await row.query_selector(\".cli-title-metadata span\")\n            rating_elem = await row.query_selector(\".ipc-rating-star--rating\")\n            \n            title_text = await title_elem.inner_text() if title_elem else \"\"\n            \n            year_text = \"\"\n            if year_elem:\n                year_full = await year_elem.inner_text()\n                year_match = re.search(r'(\\d{4})', year_full)\n                if year_match:\n                    year_text = year_match.group(1)\n            \n            rating_text = await rating_elem.inner_text() if rating_elem else \"\"\n            \n            if title_text:\n                data.append([i, title_text.strip(), year_text, rating_text])\n        \n        await browser.close()\n        return data\n\ndata = await scrape_imdb()\ndf = pd.DataFrame(data, columns=[\"Rank\", \"Title\", \"Year\", \"IMDB Rating\"])\ndf.to_csv(\"/kaggle/working/imdb_top250.csv\", index=False)\ndf2 = pd.read_csv(\"/kaggle/working/imdb_top250.csv\")\nprint(df2.head(10))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-17T16:38:29.171946Z","iopub.execute_input":"2025-09-17T16:38:29.172256Z","iopub.status.idle":"2025-09-17T16:39:02.394127Z","shell.execute_reply.started":"2025-09-17T16:38:29.172232Z","shell.execute_reply":"2025-09-17T16:39:02.393315Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: nest_asyncio in /usr/local/lib/python3.11/dist-packages (1.6.0)\nRequirement already satisfied: playwright in /usr/local/lib/python3.11/dist-packages (1.55.0)\nRequirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.3)\nRequirement already satisfied: pyee<14,>=13 in /usr/local/lib/python3.11/dist-packages (from playwright) (13.0.0)\nRequirement already satisfied: greenlet<4.0.0,>=3.1.1 in /usr/local/lib/python3.11/dist-packages (from playwright) (3.2.3)\nRequirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\nRequirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.2->pandas) (2.4.1)\nRequirement already satisfied: typing-extensions in /usr/local/lib/python3.11/dist-packages (from pyee<14,>=13->playwright) (4.14.0)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.2->pandas) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.2->pandas) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy>=1.23.2->pandas) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy>=1.23.2->pandas) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy>=1.23.2->pandas) (2024.2.0)\n   Rank                                              Title  Year  IMDB Rating\n0     1                        1. The Shawshank Redemption  1994          9.3\n1     2                                   2. The Godfather  1972          9.2\n2     3                                 3. The Dark Knight  2008          9.1\n3     4                           4. The Godfather Part II  1974          9.0\n4     5                                    5. 12 Angry Men  1957          9.0\n5     6   6. The Lord of the Rings: The Return of the King  2003          9.0\n6     7                                7. Schindler's List  1993          9.0\n7     8  8. The Lord of the Rings: The Fellowship of th...  2001          8.9\n8     9                                    9. Pulp Fiction  1994          8.8\n9    10                 10. The Good, the Bad and the Ugly  1966          8.8\n","output_type":"stream"}],"execution_count":6},{"cell_type":"markdown","source":"# Question 3","metadata":{}},{"cell_type":"code","source":"import requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\nurl = \"https://www.timeanddate.com/weather/\"\nsoup = BeautifulSoup(requests.get(url).text, \"html.parser\")\n\nlinks = [a[\"href\"] for a in soup.select(\"a[href^='/weather/']\") if len(a[\"href\"].split(\"/\"))==4]\n\ndata = []\nfor link in links[:20]:\n    s = BeautifulSoup(requests.get(\"https://www.timeanddate.com\"+link).text, \"html.parser\")\n    city = s.select_one(\"h1\").text.replace(\" Weather\",\"\").strip()\n    temp = s.select_one(\"div#qlook .h2\").text.strip()\n    cond = s.select_one(\"div#qlook p\").text.strip()\n    data.append([city, temp, cond])\n\npd.DataFrame(data, columns=[\"City Name\",\"Temperature\",\"Weather Condition\"]).to_csv(\"weather.csv\", index=False)\ndf3=pd.read_csv(\"/kaggle/working/weather.csv\")\nprint(df3.head(20))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-17T16:39:06.103394Z","iopub.execute_input":"2025-09-17T16:39:06.103685Z","iopub.status.idle":"2025-09-17T16:39:09.459566Z","shell.execute_reply.started":"2025-09-17T16:39:06.103661Z","shell.execute_reply":"2025-09-17T16:39:09.458719Z"}},"outputs":[{"name":"stdout","text":"                                          City Name Temperature  \\\n0        Weather in Charleston, South Carolina, USA       81 °F   \n1        Weather in Charleston, South Carolina, USA       81 °F   \n2                Weather in New York, New York, USA       67 °F   \n3                Weather in New York, New York, USA       67 °F   \n4        Weather in London, England, United Kingdom       66 °F   \n5        Weather in London, England, United Kingdom       66 °F   \n6                           Weather in Tokyo, Japan       81 °F   \n7                           Weather in Tokyo, Japan       81 °F   \n8                           Weather in Accra, Ghana       81 °F   \n9              Weather in Edmonton, Alberta, Canada       61 °F   \n10                       Weather in Nassau, Bahamas       88 °F   \n11                 Weather in Addis Ababa, Ethiopia       64 °F   \n12             Weather in Frankfurt, Hesse, Germany       66 °F   \n13               Weather in New Delhi, Delhi, India       80 °F   \n14  Weather in Adelaide, South Australia, Australia       48 °F   \n15             Weather in Guatemala City, Guatemala       73 °F   \n16           Weather in New Orleans, Louisiana, USA       85 °F   \n17                      Weather in Algiers, Algeria       79 °F   \n18          Weather in Halifax, Nova Scotia, Canada       72 °F   \n19               Weather in New York, New York, USA       67 °F   \n\n             Weather Condition  \n0              Passing clouds.  \n1              Passing clouds.  \n2   Light rain. Mostly cloudy.  \n3   Light rain. Mostly cloudy.  \n4                Partly sunny.  \n5                Partly sunny.  \n6                        Warm.  \n7                        Warm.  \n8              Passing clouds.  \n9              Passing clouds.  \n10              Broken clouds.  \n11             Passing clouds.  \n12             Passing clouds.  \n13                        Fog.  \n14                     Chilly.  \n15           Scattered clouds.  \n16                      Sunny.  \n17             Passing clouds.  \n18               Partly sunny.  \n19  Light rain. Mostly cloudy.  \n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"# Files saved in Directory : (Screenshot)     ![image.png](attachment:08828a64-c633-4e3c-8d82-de2acc7be968.png)","metadata":{},"attachments":{"08828a64-c633-4e3c-8d82-de2acc7be968.png":{"image/png":""}}}]}
